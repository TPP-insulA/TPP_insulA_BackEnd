datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  firstName     String
  lastName      String
  password      String
  birthDay      Int
  birthMonth    Int
  birthYear     Int
  weight        Float
  height        Float
  glucoseProfile String    // 'hypo' | 'normal' | 'hyper'
  profileImage  String?    // URL de la imagen de perfil
  diabetesType  String    @default("type1") // Only Type 1 Diabetes
  diagnosisDate DateTime  @default(now())
  treatingDoctor String?
  glucoseTarget GlucoseTarget?
  readings      GlucoseReading[]
  activities    Activity[]
  insulinDoses  InsulinDose[]
  meals         Meal[]     
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model GlucoseTarget {
  id          String   @id @default(uuid())
  minTarget   Float
  maxTarget   Float
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id])
}

model GlucoseReading {
  id        String   @id @default(uuid())
  value     Float
  timestamp DateTime @default(now())
  notes     String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Activity {
  id        String   @id @default(uuid())
  type      String   // 'glucose' | 'meal' | 'insulin'
  value     Float?
  mealType  String?
  carbs     Float?
  units     Float?
  timestamp DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model InsulinDose {
  id          String   @id @default(uuid())
  units       Float
  glucoseLevel Float?
  carbIntake   Float?
  timestamp   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Meal {
  id          String   @id @default(uuid())
  name        String
  description String?
  carbs       Float
  protein     Float
  fat         Float
  calories    Float
  quantity    Float    @default(1)
  photo       String?
  timestamp   DateTime @default(now())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}